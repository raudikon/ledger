import { B as BetterAuthOptions, A as Adapter } from '../../shared/better-auth.WlYTsJnh.cjs';
import { DBAdapterDebugLogOption } from '@better-auth/core/db/adapter';
import '../../shared/better-auth.Bo4kHJI7.cjs';
import '../../shared/better-auth.DTtXpZYr.cjs';
import 'kysely';
import 'better-call';
import '@better-auth/core/db';
import 'zod';
import '../../social-providers/index.cjs';
import '@better-auth/core';
import 'better-sqlite3';
import 'bun:sqlite';
import 'node:sqlite';
import 'packages/core/dist/db/adapter';
import 'zod/v4/core';

interface PrismaConfig {
    /**
     * Database provider.
     */
    provider: "sqlite" | "cockroachdb" | "mysql" | "postgresql" | "sqlserver" | "mongodb";
    /**
     * Enable debug logs for the adapter
     *
     * @default false
     */
    debugLogs?: DBAdapterDebugLogOption;
    /**
     * Use plural table names
     *
     * @default false
     */
    usePlural?: boolean;
    /**
     * Whether to execute multiple operations in a transaction.
     *
     * If the database doesn't support transactions,
     * set this to `false` and operations will be executed sequentially.
     * @default true
     */
    transaction?: boolean;
}
interface PrismaClient {
}
declare const prismaAdapter: (prisma: PrismaClient, config: PrismaConfig) => (options: BetterAuthOptions) => Adapter;

export { prismaAdapter };
export type { PrismaConfig };
